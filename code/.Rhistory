ggsave(here("../output/figures/cses_prop.pdf"), cses_prop)
cses_prop <- ggplot(prop_df_long, aes(x = s, y = value)) +
geom_line(aes(colour = variable, group = interaction(case, variable)), alpha = 0.06) +
geom_line(data = prop_df_agg, aes(colour = variable, group = variable, x = s, y = value),
size = 1) +
labs(x = "Information (s)",
y = "Proportion of voters in CSES (case) casting ballot type",
colour = "Ballot order") +
theme_bw() +
scale_color_manual(values = c("lime green", "blue", "red")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.1, 0)) +
theme(legend.position = "bottom")
ggsave(here("../output/figures/cses_prop.pdf"), cses_prop)
prop_df$inc_rcv <- prop_df$second + prop_df$third
prop_df$inc_plur <- prop_df$plur_second
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
# Distribution of incentives
prop_df$inc_rcv <- prop_df$rcv_sec + prop_df$rcv_third
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
prop_df$inc_plur <- prop_df$plur_second
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
prop_df$inc_plur <- prop_df$plur_second
head(prop_df)
prop_df$inc_plur <- prop_df$plur_sec
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.25), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of AES respondents with positive SI under Plurality",
y = "Proportion of AES respondents with positive SI under RCV")
cses_inc
ggsave(here("../output/figures/cses_inc.pdf"), cses_inc)
cses_inc <- ggplot(prop_df, aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
ggsave(here("../output/figures/cses_inc.pdf"), cses_inc)
names(big_list)[[39]]
names(big_list[[145]])
names(big_list)[[145]]
cses_inc <- ggplot(prop_df[prop_df$s == 60], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc <- ggplot(prop_df[, prop_df$s == 60], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc <- ggplot(prop_df[prop_df$s == 60, ], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc
cses_inc <- ggplot(prop_df[prop_df$s == 30, ], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc
cses_inc <- ggplot(prop_df[prop_df$s == 60, ], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc
install.packages("questionr")
install.packages("questionr")
##################################################
## Project: Strategic Voting in RCV
## Script purpose: Useful functions for project
## Date: 30/10/2018
## Author:
##################################################
library(questionr)
sum_opt_votes <- function(sin_vec, opt_vec, type = "rcv", weights = rep(1, length(opt_vec))){
# Input: vector of sincere preferences, vector of opt. votes
# todo: add weights through wtd.table()
# Output: Table
if(type == "rcv"){
sin_vec <- factor(sin_vec, levels = 1:6)
opt_vec <- factor(opt_vec, levels = 1:6)
tab <- wtd.table(sin_vec, opt_vec, weights = weights)
out <- rbind(c(tab[1, 1], tab[1, 3], tab[1, 5]),
c(tab[2, 2], tab[2, 5], tab[2, 3]),
c(tab[3, 3], tab[3, 1], tab[3, 6]),
c(tab[4, 4], tab[4, 6], tab[4, 1]),
c(tab[5, 5], tab[5, 2], tab[5, 4]),
c(tab[6, 6], tab[6, 4], tab[6, 2]))
return(colSums(out))
}
if(type == "plur"){
sin_vec <- factor(sin_vec, levels = 1:6)
opt_vec <- factor(opt_vec, levels = 1:3)
tab <- wtd.table(sin_vec, opt_vec, weights = weights)
out <- rbind(c(tab[1, 1], tab[1, 2]),
c(tab[2, 1], tab[2, 3]),
c(tab[3, 2], tab[3, 1]),
c(tab[4, 2], tab[4, 3]),
c(tab[5, 3], tab[5, 1]),
c(tab[6, 3], tab[6, 2]))
return(colSums(out))
}
}
sv_prop(sv_list[[1]])
sum_opt_votes <- function(sin_vec, opt_vec, type = "rcv", weights = rep(1, length(opt_vec))){
# Input: vector of sincere preferences, vector of opt. votes
# todo: add weights through wtd.table()
# Output: Table
if(type == "rcv"){
sin_vec <- factor(sin_vec, levels = 1:6)
opt_vec <- factor(opt_vec, levels = 1:6)
tab <- wtd.table(sin_vec, opt_vec, weights = weights)
out <- rbind(c(tab[1, 1], tab[1, 3], tab[1, 5]),
c(tab[2, 2], tab[2, 5], tab[2, 3]),
c(tab[3, 3], tab[3, 1], tab[3, 6]),
c(tab[4, 4], tab[4, 6], tab[4, 1]),
c(tab[5, 5], tab[5, 2], tab[5, 4]),
c(tab[6, 6], tab[6, 4], tab[6, 2]))
return(colSums(out))
}
if(type == "plur"){
sin_vec <- factor(sin_vec, levels = 1:6)
opt_vec <- factor(opt_vec, levels = 1:3)
tab <- wtd.table(sin_vec, opt_vec, weights = weights)
out <- rbind(c(tab[1, 1], tab[1, 2]),
c(tab[2, 1], tab[2, 3]),
c(tab[3, 2], tab[3, 1]),
c(tab[4, 2], tab[4, 3]),
c(tab[5, 3], tab[5, 1]),
c(tab[6, 3], tab[6, 2]))
return(colSums(out))
}
}
prop_list[[1]]
big_list_na_omit[[30]]
big_list_na_omit[[3]]
big_list_na_omit[[6]]
big_list_na_omit[[28]]
big_list_na_omit[[100]]
big_list_na_omit[[101]]
big_list_na_omit[[102]]
big_list_na_omit[[103]]
big_list_na_omit[[104]]
big_list_na_omit[[105]]
big_list_na_omit[[106]]
big_list_na_omit[[107]]
big_list_na_omit[[108]]
big_list_na_omit[[109]]
sv_prop(sv_list[[109]])
prop_list[[109]]
sv_prop(sv_list[[109]], big_list_na_omit[[109]]$weights)
sv_prop <- function(tau_obj, weights){
tau_list <- split(tau_obj, tau_obj$s)
# RCV proportions
opt_vote_prop <- lapply(tau_list, function(x) sum_opt_votes(x$sin_rcv, x$opt_rcv, type = "rcv", weights = weights))
prop_df_rcv <- do.call(rbind, opt_vote_prop)
opt_vote_prop_plur <- lapply(tau_list, function(x) sum_opt_votes(x$sin_rcv, x$opt_plur, type = "plur", weights = weights))
prop_df_plur <- do.call(rbind, opt_vote_prop_plur)
prop_df <- cbind(prop_df_rcv, prop_df_plur)
return(prop_df)
}
sv_prop(sv_list[[109]], big_list_na_omit[[109]]$weights)
# Proportion of optimal strategic votes
prop_list <- lapply(sv_list, function(x) sv_prop(x))
# Add case name and s to dfs
prop_list <- list()
for(i in 1:length(sv_list)){
print(i)
prop_list[[i]] <- sv_prop(sv_list[[i]], big_list_na_omit[[i]]$weights)
df <- as.data.frame(prop_list[[i]])
df$case <- as.character(names(big_list_na_omit)[[i]])
df$s <- as.numeric(s_list)
n <- apply(df[, 1:3], 1, function(x) sum(x))
df[, 1:5] <- df[, 1:5] / sum(big_list_na_omit[[i]]$weights)
prop_list[[i]] <- df
}
prop_list[[1]]
prop_list[[109]]
prop_df <- do.call(rbind, prop_list)
names(prop_df)[1:5] <- c("rcv_first", "rcv_sec", "rcv_third", "plur_first", "plur_sec")
prop_df_long <- melt(prop_df[, c(2, 3, 5, 6, 7)], id.vars = c("case", "s"))
prop_df_agg <- as.data.frame(prop_df_long %>%
group_by(variable, s) %>%
summarize(mean(value)))
names(prop_df_agg)[3] <- "value"
cses_prop <- ggplot(prop_df_long, aes(x = s, y = value)) +
geom_line(aes(colour = variable, group = interaction(case, variable)), alpha = 0.06) +
geom_line(data = prop_df_agg, aes(colour = variable, group = variable, x = s, y = value),
size = 1) +
labs(x = "Information (s)",
y = "Proportion of voters in CSES (case) casting ballot type",
colour = "Ballot order") +
theme_bw() +
scale_color_manual(values = c("lime green", "blue", "red")) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0.1, 0)) +
theme(legend.position = "bottom")
ggsave(here("../output/figures/cses_prop.pdf"), cses_prop)
# Distribution of incentives
prop_df$inc_rcv <- prop_df$rcv_sec + prop_df$rcv_third
prop_df$inc_plur <- prop_df$plur_sec
cses_inc <- ggplot(prop_df[prop_df$s == 60, ], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
cses_inc
source(functions)
for(i in 1:length(sv_list)){
print(i)
prop_list[[i]] <- sv_prop(sv_list[[i]], big_list_na_omit[[i]]$weights)
df <- as.data.frame(prop_list[[i]])
df$case <- as.character(names(big_list_na_omit)[[i]])
df$s <- as.numeric(s_list)
n <- apply(df[, 1:3], 1, function(x) sum(x))
df[, 1:5] <- df[, 1:5] / sum(big_list_na_omit[[i]]$weights)
prop_list[[i]] <- df
}
prop_df <- do.call(rbind, prop_list)
names(prop_df)[1:5] <- c("rcv_first", "rcv_sec", "rcv_third", "plur_first", "plur_sec")
prop_df_long <- melt(prop_df[, c(2, 3, 5, 6, 7)], id.vars = c("case", "s"))
prop_df_agg <- as.data.frame(prop_df_long %>%
group_by(variable, s) %>%
summarize(mean(value)))
names(prop_df_agg)[3] <- "value"
big_list_na_omit[[1]]$weights
head(sv_list[[1]])
prop_list_alt <- list()
for(i in 1:length(sv_list)){
prop_list_alt[[i]] <- sv_prop_alt(sv_list[[i]], big_list_na_omit[[i]]$weights)
}
sv_prop_alt <- function(tau_obj, weights){
inc_rcv <- sum(weights[tau_obj$tau_rcv > 0]) / sum(weights)
inc_plur <- sum(weights[tau_obj$tau_plur > 0]) / sum(weights)
return(c(inc_rcv, inc_plur))
}
prop_list_alt <- list()
for(i in 1:length(sv_list)){
prop_list_alt[[i]] <- sv_prop_alt(sv_list[[i]], big_list_na_omit[[i]]$weights)
}
prop_list_alt[[1]]
sv_list[[1]]
sv_prop_alt(sv_list[[1]], big_list_na_omit[[1]]$weights)
sv_list[[1]]$tau_rcv > 0
big_list_na_omit[[i]]$weights[sv_list[[1]]$tau_rcv > 0]
big_list_na_omit[[1]]$weights[sv_list[[1]]$tau_rcv > 0]
big_list_na_omit[[1]]$weights
class(sv_list[[1]]$tau_rcv > 0)
log_vec <- sv_list[[1]]$tau_rcv > 0
sv_prop_alt <- function(tau_obj, weights, s = 60){
tau_obj <- tau_obj[tau_obj$s == s, ]
inc_rcv <- sum(weights[tau_obj$tau_rcv > 0]) / sum(weights)
inc_plur <- sum(weights[tau_obj$tau_plur > 0]) / sum(weights)
return(c(inc_rcv, inc_plur))
}
sv_prop_alt(sv_list[[1]], big_list_na_omit[[1]]$weights)
prop_list_alt <- list()
for(i in 1:length(sv_list)){
prop_list_alt[[i]] <- sv_prop_alt(sv_list[[i]], big_list_na_omit[[i]]$weights, 60)
}
prop_df_alt <- do.call(rbind, prop_list_alt)
prop_df_alt <- as.data.frame(do.call(rbind, prop_list_alt))
ggplot(prop_df_alt, aes(V1, V2))
ggplot(prop_df_alt, aes(V1, V2)) +
geom_point()
ggplot(prop_df_alt, aes(V2, V1)) +
geom_point()
ggplot(prop_df_alt, aes(V2, V1)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0))
ggplot(prop_df_alt, aes(V2, V1)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0))
cses_inc
sv_list[[109]]
big_list_na_omit[[109]]$weights
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list_na_omit[[109]]$v_vec, 0, 0, 0), big_list_na_omit[[109]]$U, list(60))
test_andy <- sv(U = big_list_na_omit[[109]]$U, weights = big_list_na_omit[[109]]$weights, s = 60)
test_andy
test_andy$tau[1:10]
test_toby$tau_rcv[1:10]
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list_na_omit[[108]]$v_vec, 0, 0, 0), big_list_na_omit[[109]]$U, list(60))
test_andy <- sv(U = big_list_na_omit[[108]]$U, weights = big_list_na_omit[[109]]$weights, s = 60)
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list_na_omit[[108]]$v_vec, 0, 0, 0), big_list_na_omit[[108]]$U, list(60))
test_andy <- sv(U = big_list_na_omit[[108]]$U, weights = big_list_na_omit[[108]]$weights, s = 60)
test_toby$tau_rcv[1:10]
test_andy$tau[1:10]
test_andy <- sv(U = big_list_na_omit[[108]]$U, weights = big_list_na_omit[[108]]$weights, s = 60, rule = "AV")
test_andy$tau[1:10]
test_toby <- return_sv_tau(c(big_list_na_omit[[109]]$v_vec, 0, 0, 0), big_list_na_omit[[109]]$U, list(60))
test_andy <- sv(U = big_list_na_omit[[109]]$U, weights = big_list_na_omit[[109]]$weights, s = 60, rule = "AV")
test_andy$tau[1:10]
test_toby$tau_rcv[1:10]
sv_prop_alt(test_toby, big_list_na_omit[[109]]$weights, 60)
# test with Andy's output
weights <- big_list_na_omit[[109]]$weights
inc_rcv <- sum(weights[test_andy$tau > 0]) / sum(weights)
inc_rcv
big_list_na_omit[[109]]
names(big_list[[110]])
names(big_list)[110]
names(big_list_na_omit)[110]
names(big_list_na_omit)[109]
# test with Andy's output
test_andy <- sv(U = big_list[[110]]$U, weights = big_list[[110]]$weights, s = 60)
warnings()
test_andy
inc_rcv <- sum(weights[test_andy$tau > 0], na.rm = T) / sum(weights, na.rm = T)
inc_rcv
sv_prop_alt(test_toby, big_list_na_omit[[109]]$weights, 60)
test_andy$tau
head(test_andy$tau)
# test with Andy's output
test_andy <- sv(U = big_list[[110]]$U, weights = big_list[[110]]$weights, s = 60, type = "AV")
# test with Andy's output
test_andy <- sv(U = big_list[[110]]$U, weights = big_list[[110]]$weights, s = 60, rule = "AV")
weights <- big_list[[110]]$weights
inc_rcv <- sum(weights[test_andy$tau > 0], na.rm = T) / sum(weights, na.rm = T)
inc_rcv
head(test_andy$tau)
head(test_toby$tau_rcv)
sum(weights, na.rm = T)
sum(big_list_na_omit[[109]]$weights)
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list[[109]]$v_vec, 0, 0, 0), big_list[[110]]$U, list(60))
names(test_andy)
inc_rcv <- sum(weights[test_andy$tau > 0 & !is.na(opt_vote)], na.rm = T) / sum(weights[!is.na(opt_vote)], na.rm = T)
opt_vote <- as.numeric(test_andy$opt.votes.strategic)
opt_vote
opt_vote <- test_andy$opt.votes.strategic
opt_vote
inc_rcv <- sum(weights[test_andy$tau > 0 & !is.na(opt_vote)], na.rm = T) / sum(weights[!is.na(opt_vote)], na.rm = T)
inc_rcv
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list_na_omit[[109]]$v_vec, 0, 0, 0), big_list_na_omit[[109]]$U, list(60))
# Load my own functions:
functions <- here("utils/functions.r")
source(functions)
# Check whether they really do produce the same as Andy's function!
test_toby <- return_sv_tau(c(big_list_na_omit[[109]]$v_vec, 0, 0, 0), big_list_na_omit[[109]]$U, list(60))
sv_prop_alt(test_toby, big_list_na_omit[[109]])
sv_prop_alt(test_toby, big_list_na_omit[[109]]$weights)
inc_rcv
andy_list <- list()
for(i in 1:length(big_list)){
this_list <- big_list[[i]]
andy_list[[i]] <- sv(U = this_list$U, weights = this_list$weights, s = 60, rule = "AV")
}
andy_list <- list()
for(i in 1:length(big_list)){
this_list <- big_list[[i]]
print(i)
andy_list[[i]] <- sv(U = this_list$U, weights = this_list$weights, s = 60, rule = "AV")
}
andy_list <- list()
andy_list_prop <- list()
for(i in 1:length(big_list)){
this_list <- big_list[[i]]
print(i)
sv_obj <- sv(U = this_list$U, weights = this_list$weights, s = 60, rule = "AV")
sv_obj_plur <- sv(U = this_list$U, weights = this_list$weights, s = 60)
andy_list[[i]] <- sv_obj
prop_av <- sum(sv_obj$weights[!is.na(sv_obj$tau) & sv_obj$tau > 0]) / sum(sv_obj$weights[!is.na(sv_obj$tau)])
prop_plur <- sum(sv_obj_plur$weights[!is.na(sv_obj_plur$tau) & sv_obj_plur$tau > 0]) / sum(sv_obj_plur$weights[!is.na(sv_obj$tau)])
andy_list_prop[[i]] <- c(prop_av, prop_plur)
}
andy_list_prop
andy_list_prop_df <- do.call(rbind, andy_list_prop)
head(andy_list_prop_df)
head(prop_df_alt)
plot(andy_list_prop_df)
plot(andy_list_prop_df[, 2], andy_list_prop_df[, 1])
plot(prop_df_alt[, 2], prop_df_alt[, 1])
plot(prop_df_alt[, 2], prop_df_alt[, 1])
plot(andy_list_prop_df[, 2], andy_list_prop_df[, 1])
plot(andy_list_prop_df[, 2], andy_list_prop_df[, 1])
plot(prop_df_alt[, 2], prop_df_alt[, 1])
head(prop_df)
head(prop_df[prop_df$s == 60])
head(prop_df[, prop_df$s == 60])
head(prop_df[prop_df$s == 60, ])
# Distribution of incentives
prop_df$inc_rcv <- prop_df$rcv_sec + prop_df$rcv_third
prop_df$inc_plur <- prop_df$plur_sec
head(prop_df[prop_df$s == 60, ])
# compare:
andy_list_prop_df == prop_df[prop_df$s == 60, c(8, 9)]
head(andy_list_prop_df)
head(prop_df[prop_df$s == 60, ])
prop_df[prop_df$s == 60, 9]
andy_list_prop_df[, 2]
andy_list_prop_df[, 2] == prop_df[prop_df$s == 60, 9]
andy_list_prop_df[!is.na(andy_list_prop_df), 2] == prop_df[prop_df$s == 60, 9]
andy_list_prop_df[!is.na(andy_list_prop_df[, 2]), 2] == prop_df[prop_df$s == 60, 9]
andy_list_prop_df[!is.na(andy_list_prop_df[, 2]), 2][7]
prop_df[prop_df$s == 60, 9][7]
prop_df[prop_df$s == 60, 9][7] == andy_list_prop_df[!is.na(andy_list_prop_df[, 2]), 2][7]
prop_df[prop_df$s == 60, 9][109]
andy_list_prop_df[!is.na(andy_list_prop_df[, 2]), 2][109]
andy_list_prop_df[!is.na(andy_list_prop_df[, 2]), 2][53]
prop_df[prop_df$s == 60, 9][53]
cses_inc <- ggplot(prop_df[prop_df$s == 60, ], aes(x = inc_plur, y = inc_rcv)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ s) +
theme_bw() +
scale_x_continuous(limits = c(0, 0.25), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 0.7), expand = c(0, 0)) +
labs(x = "Proportion of CSES respondents with positive SI under Plurality",
y = "Proportion of CSES respondents with positive SI under RCV")
ggsave(here("../output/figures/cses_inc.pdf"), cses_inc, width = 3, height = 6)
sv_list[[103]]
names(big_list_na_omit)[109]
head(sv_list[[109]]$tau_rcv)
head(big_list[[109]]$U)
head(big_list[["MEX_2003"]]$U)
# Load CSES data:
load(here("../output/cses_big_list_2.RData"))
head(big_list[["MEX_2003"]]$U)
